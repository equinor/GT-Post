on:
 release:
   types: [created]

name: Publish image to registry

jobs:
    get-dir-name-tag:
      outputs:
        workdir: ${{ steps.get-working-directory.outputs.workdir }}
        package-name: ${{ steps.get-package-name.outputs.package-name }}
        tag: ${{ steps.get-tag.outputs.tag }}
      runs-on: ubuntu-latest
      steps:
        - id: get-working-directory
          run: |
              WORK_DIR="."
              echo "workdir=$WORK_DIR" >> "$GITHUB_OUTPUT"
          shell: bash
        - id: get-package-name
          env:
            RELEASE_NAME: ${{ github.event.release.name }}
          run: |
            echo "RELEASE_NAME='${RELEASE_NAME}'"

            # If release.name contains a colon, assume "package: version" and take the part before the colon
            if [[ -n "${RELEASE_NAME}" && "${RELEASE_NAME}" == *:* ]]; then
              PACKAGE_NAME="${RELEASE_NAME%%:*}"
              echo "Parsed package-name from release.name: ${PACKAGE_NAME}"
            else
              PACKAGE_NAME="${GITHUB_REPOSITORY##*/}"
              echo "Fallback package-name to repo name: ${PACKAGE_NAME}"
            fi
            
            # Trim leading/trailing whitespace and convert to lowercase for container image names
            ORIGINAL_PACKAGE_NAME="${PACKAGE_NAME}"
            # remove leading/trailing whitespace
            PACKAGE_NAME="$(echo -n "${PACKAGE_NAME}" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')"
            # convert to lowercase in a portable way
            PACKAGE_NAME="$(echo "${PACKAGE_NAME}" | tr '[:upper:]' '[:lower:]')"

            echo "Original package-name: '${ORIGINAL_PACKAGE_NAME}'"
            echo "Normalized package-name: '${PACKAGE_NAME}'"

            echo "package-name=${PACKAGE_NAME}" >> "$GITHUB_OUTPUT"
          shell: bash
        - id: get-tag
          env: 
            FULL_TAG: ${{ github.event.release.tag_name }}
          run: |
            echo $FULL_TAG
            TAG=${FULL_TAG##*-}
            echo $TAG
            echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          shell: bash
    
    
    build-and-publish-release:
        name: Build and publish containers for test
        uses: ./.github/workflows/build-and-publish.yml
        needs: get-dir-name-tag
        with:
          Registry: ghcr.io
          ImageName: ${{ needs.get-dir-name-tag.outputs.package-name }}
          Tag: ${{ needs.get-dir-name-tag.outputs.tag }}
          WorkingDir: ${{ needs.get-dir-name-tag.outputs.workdir }}
        secrets: inherit