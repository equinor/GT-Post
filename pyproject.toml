[build-system]
requires = ["setuptools>66", "wheel"]
build-backend = "setuptools.build_meta"


[project]
name = "gtpost"
version = "0.1.0"
authors = [
    {name = "Erik van Onselen", email = "erik.vanonselen@deltares.nl"}
]
description = "Delft3D Geotool post-processing"
readme = "README.md"
license = {file = "LICENSE"}
keywords = [
    "delft3d",
    "geotool",
    "morphological model",
    "delta",
    "geology",
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Science/Research/Consultans",
    "Topic :: Scientific/Engineering :: Geology",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering",
]
requires-python = ">=3.10, <3.12"
dependencies = [
    "numpy",
    "numba",
    "pandas>=2.0.1",
    "rasterio",
    "xarray",
    "scipy",
    "matplotlib",
    "scikit-image",
    "shapely",
    "h5netcdf",
    "mako",
    "psutil",
]


[project.optional-dependencies]
dev = [
    "pyvista",
    "black",
    "pytest",
    "pytest-cov",
    "ruff",
    "sphinx",
    "sphinx-rtd-theme",
]


[project.urls]
Homepage = "https://github.com/Deltares-research/GT-Post"
Repository = "https://github.com/Deltares-research/GT-Post"


[tool.setuptools.packages.find]
include = ["gtpost", "gtpost.*"]


[tool.pytest.ini_options]
testpaths = ["tests"]
markers = [
	"unittest: test of single component",
	"integrationtest: test of multiple components",
]


[tool.black]
line-length = 88


[tool.ruff]
line-length = 88
target-version = "py311"


[tool.ruff.lint]
select = ["F", "E", "W", "N", "I001"]
ignore = ["F401", "E501"]
unfixable = ["F401"]
pydocstyle.convention = "numpy"