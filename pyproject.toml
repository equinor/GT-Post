[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "gtpost"
dynamic = ["version"]
authors = [
    {name = "Erik van Onselen", email = "erik.vanonselen@deltares.nl"}
]
description = "Delft3D Geotool post-processing"
readme = "README.md"
license = {file = "LICENSE"}
keywords = [
    "delft3d",
    "geotool",
    "morphological model",
    "delta",
    "geology",
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.11, <3.13"
dependencies = [
    "numpy",
    "numba",
    "pandas>=2.0.1",
    "rasterio",
    "xarray",
    "scipy",
    "matplotlib",
    "scikit-image",
    "shapely",
    "h5netcdf",
    "mako",
    "psutil",
]

[project.urls]
Homepage = "https://github.com/Deltares-research/GT-Post"
Repository = "https://github.com/Deltares-research/GT-Post"

[tool.hatch.version]
path = "gtpost/__init__.py"

[tool.hatch.build.targets.sdist]
only-include = ["gtpost", "tests"]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["win-64", "linux-64", "linux-aarch64", "osx-64", "osx-arm64"]

[tool.pixi.dependencies]
python = ">=3.11.14,<3.12"
numpy = ">=1.26.4,<1.27"
numba = ">=0.59.0"
pandas = ">=2.0.1"
rasterio = "*"
xarray = "*"
matplotlib = "*"
scikit-image = "*"
shapely = ">=2.0.1"
h5netcdf = ">=1.6.1,<2"
mako = "*"
pyvista = "*"
black = "*"
pytest = "*"
pytest-cov = "*"
ruff = "*"
sphinx = "*"
sphinx-rtd-theme = "*"
pip = ">=24.0,<25"
psutil = ">=6.1.1,<7"
affine = ">=2.4.0,<3"

[tool.pixi.pypi-dependencies]
gtpost = { path = ".", editable = true }

[tool.pixi.system-requirements]
linux = "5.4"

[tool.pixi.tasks]
test = "python -m pytest --verbose --cov=gtpost --cov-config=.coveragerc"
docs = "sphinx-build -b html docs ./docs/build"
format = "black ."
lint = "ruff check --fix ./gtpost"

[tool.pixi.feature.py311.dependencies]
python = "3.11.*"

[tool.pixi.environments]
default = { features = ["py311"], solve-group = "py311" }
py311 = { features = ["py311"], solve-group = "py311" }

[tool.pytest.ini_options]
testpaths = ["tests"]
markers = [
	"unittest: test of single component",
	"integrationtest: test of multiple components",
]


[tool.black]
line-length = 88


[tool.ruff]
line-length = 88
target-version = "py311"


[tool.ruff.lint]
select = ["F", "E", "W", "N", "I001"]
ignore = ["F401", "E501"]
unfixable = ["F401"]
pydocstyle.convention = "numpy"
